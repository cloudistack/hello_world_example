tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.1/types.yaml
  - plugin:cloudify-openstack-plugin

inputs:

  username:
    type: string

  keystone_password:
    type: string

  tenant_name:
    type: string

  auth_url:
    type: string

  region:
    type: string

  network_id:
    type: string

  subnet_id:
    type: string

  ubuntu_trusty_image:
    type: string

  small_image_flavor:
    type: string

dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: tenant_name }
    auth_url: { get_input: auth_url }
    region: { get_input: region }

node_templates:

  external_server:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      agent_config:
        install_method: none
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            resource_id: { get_attribute: [server, external_id]}
    relationships:
    - type: cloudify.relationships.contained_in
      target: private_network
    - type: cloudify.openstack.server_connected_to_port
      target: private_port
    - type: cloudify.relationships.depends_on
      target: server

  server:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      agent_config:
        install_method: none
      server:
        key_name: ''
        image: { get_input: ubuntu_trusty_image }
        flavor: { get_input: small_image_flavor }
    relationships:
      - target: network
        type: cloudify.relationships.contained_in
      - target: port
        type: cloudify.openstack.server_connected_to_port

  port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.contained_in
        target: network
      - type: cloudify.relationships.depends_on
        target: subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: security_group

  private_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: private_network
    - type: cloudify.relationships.depends_on
      target: private_subnet
    - type: cloudify.openstack.port_connected_to_security_group
      target: security_group

  subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: subnet_id }
    relationships:
      - type: cloudify.relationships.contained_in
        target: network

  private_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      openstack_config: *openstack_config
      subnet:
        ip_version: 4
        cidr: '10.10.131.0/24'
    relationships:
    - type: cloudify.relationships.contained_in
      target: private_network

  private_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input: network_id }

  security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      security_group:
        description: My Test Security Group
